<sequence_node size='2'>
  <variable_declaration_node name='x' qualifier='private' type='integer'>
    <initializer>
    </initializer>
  </variable_declaration_node>
  <function_definition_node name='fir' qualifier='public' type='integer'>
    <arguments>
    </arguments>
    <return_value>
      <integer_node>0</integer_node>
    </return_value>
    <prologue>
    </prologue>
    <body>
      <block_node>
        <declarations>
        </declarations>
        <instructions>
          <sequence_node size='2'>
            <evaluation_node>
              <assignment_node>
                <variable_node>x</variable_node>
                <integer_node>1</integer_node>
              </assignment_node>
            </evaluation_node>
            <while_node>
              <condition>
                <le_node>
                  <rvalue_node>
                    <variable_node>x</variable_node>
                  </rvalue_node>
                  <integer_node>6</integer_node>
                </le_node>
              </condition>
              <block>
                <block_node>
                  <declarations>
                  </declarations>
                  <instructions>
                    <sequence_node size='2'>
                      <if_else_node>
                        <condition>
                          <eq_node>
                            <mod_node>
                              <rvalue_node>
                                <variable_node>x</variable_node>
                              </rvalue_node>
                              <integer_node>2</integer_node>
                            </mod_node>
                            <integer_node>1</integer_node>
                          </eq_node>
                        </condition>
                        <thenblock>
                          <block_node>
                            <declarations>
                            </declarations>
                            <instructions>
                              <sequence_node size='2'>
                                <evaluation_node>
                                  <assignment_node>
                                    <variable_node>x</variable_node>
                                    <add_node>
                                      <rvalue_node>
                                        <variable_node>x</variable_node>
                                      </rvalue_node>
                                      <integer_node>1</integer_node>
                                    </add_node>
                                  </assignment_node>
                                </evaluation_node>
                                <restart_node cycle_number='1'>
                                </restart_node>
                              </sequence_node>
                            </instructions>
                          </block_node>
                        </thenblock>
                        <elseblock>
                          <write_node newline='1'>
                            <arguments>
                              <sequence_node size='1'>
                                <rvalue_node>
                                  <variable_node>x</variable_node>
                                </rvalue_node>
                              </sequence_node>
                            </arguments>
                          </write_node>
                        </elseblock>
                      </if_else_node>
                      <evaluation_node>
                        <assignment_node>
                          <variable_node>x</variable_node>
                          <add_node>
                            <rvalue_node>
                              <variable_node>x</variable_node>
                            </rvalue_node>
                            <integer_node>1</integer_node>
                          </add_node>
                        </assignment_node>
                      </evaluation_node>
                    </sequence_node>
                  </instructions>
                </block_node>
              </block>
              <finally_block>
              </finally_block>
            </while_node>
          </sequence_node>
        </instructions>
      </block_node>
    </body>
    <epilogue>
    </epilogue>
  </function_definition_node>
</sequence_node>
